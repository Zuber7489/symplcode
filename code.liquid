{% comment %}
  Cart Design Only - HTML, CSS and Bundle Slider
  Pure static design with bundle slide navigation
  Usage: {% render 'cart-design-only' %}
{% endcomment %}

<div id="custom-cart" class="custom-cart-container" style="display: block;">
  <div class="custom-cart-overlay"></div>
  
  <div class="custom-cart-content">
    <!-- Free Shipping Progress Bar -->
    <div class="free-shipping-progress">
      <div class="progress-text">
          <span class="free-shipping-progress-text">
            Almost there! Add <span class="remaining-amount">$45.00</span> more for free shipping
          </span>
      </div>
      
      <div class="progress-bar-container">
        <div class="progress-bar" style="width: 65%">
          <div class="truck-icon">
            <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M22 15v-3c0-.6-.4-1-1-1h-1V8c0-.6-.4-1-1-1h-3l-2-2H8V4c0-.6-.4-1-1-1H4c-.6 0-1 .4-1 1v1H2c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1h1v1c0 .6.4 1 1 1h1c.6 0 1-.4 1-1v-1h12v1c0 .6.4 1 1 1h1c.6 0 1-.4 1-1v-1h1c.6 0 1-.4 1-1zM4 5h2v2H4V5zm2 12H4v-1h2v1zm12 0h-2v-1h2v1zm2-2h-1v-1h1v1z"/>
              <circle cx="7" cy="17" r="1.5"/>
              <circle cx="17" cy="17" r="1.5"/>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- Cart Header -->
    <div class="cart-header">
      <h2 class="cart-title">Your bag (2)</h2>
      <button class="cart-close" aria-label="Close cart">âœ•</button>
    </div>

    <!-- Cart Items and Bundle Section Container -->
    <div class="cart-items-container">
        <div id="cart-items-list" class="cart-items-list">
            <div class="cart-item" data-item-key="static-key-1" data-variant-id="123456">
              <div class="cart-item-image">
                <img src="https://symplofficial.com/cdn/shop/files/Commuter-Carb-20L_preorder_2200x2800_crop_center.jpg?v=1754951777" 
                     alt="Commuter Backpack 20L" loading="lazy">
              </div>
              
              <div class="cart-item-details">
                <h3 class="cart-item-title">Commuter Backpack 20L</h3>
                  <p class="cart-item-variant">Carbonate</p>
              </div>
              
              <div class="cart-item-actions">
                <div class="cart-item-quantity">
                  <button class="quantity-btn minus" data-action="decrease">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                    </svg>
                  </button>
                  <span class="quantity-display">1</span>
                  <button class="quantity-btn plus" data-action="increase">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                  </button>
                </div>
                
                <div class="cart-item-pricing">
                    <div class="price-container">
                      <div class="original-price">$149.00</div>
                      <div class="sale-price">$119.00</div>
                      <div class="savings">(Save $30.00)</div>
                      <div class="bundle-tag">
                        <span class="bundle-dot"></span>
                        BUNDLED
                      </div>
                    </div>
                </div>
                
                <button class="cart-item-remove" data-item-key="static-key-1" aria-label="Remove item">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                  </svg>
                </button>
              </div>
            </div>
          
            <div class="cart-item" data-item-key="static-key-2" data-variant-id="789012">
              <div class="cart-item-image">
                <img src="https://symplofficial.com/cdn/shop/files/Commuter-Carb-20L_preorder_2200x2800_crop_center.jpg?v=1754951777" 
                     alt="Motion Sling 3L" loading="lazy">
              </div>
              
              <div class="cart-item-details">
                <h3 class="cart-item-title">Motion Sling 3L</h3>
                  <p class="cart-item-variant">X-Pac</p>
              </div>
              
              <div class="cart-item-actions">
                <div class="cart-item-quantity">
                  <button class="quantity-btn minus" data-action="decrease">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                    </svg>
                  </button>
                  <span class="quantity-display">1</span>
                  <button class="quantity-btn plus" data-action="increase">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                  </button>
                </div>
                
                <div class="cart-item-pricing">
                    <div class="price-container">
                      <div class="regular-price">$99.00</div>
                    </div>
                </div>
                
                <button class="cart-item-remove" data-item-key="static-key-2" aria-label="Remove item">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                  </svg>
                </button>
              </div>
            </div>
        </div>
        
        <!-- Bundle & Save Section -->
        <div class="bundle-save-section">
          <h3 class="bundle-title">Bundle & save</h3>
          <div class="bundle-products-container">
            <div class="bundle-products-scroll" id="bundle-products-scroll">
              <!-- Static bundle products for design -->
              <div class="bundle-product" data-product-id="bundle-1">
                <div class="bundle-product-gray-box">
                  <div class="bundle-product-image">
                    <img src="https://symplofficial.com/cdn/shop/files/Commuter-Carb-20L_preorder_2200x2800_crop_center.jpg?v=1754951777" alt="Tech Kit">
                  </div>
                </div>
                <h4 class="bundle-product-title">Tech Kit</h4>
                <div class="bundle-product-material">Carbonate</div>
                <div class="bundle-product-variants">
                  <div class="variant-dot selected" data-variant-id="var-1">
                    <div class="dot"></div>
                  </div>
                  <div class="variant-dot" data-variant-id="var-2">
                    <div class="dot"></div>
                  </div>
                </div>
                <p class="bundle-product-price">$59.00</p>
                <button class="add-to-bag-btn">Add to Bag</button>
              </div>

              <div class="bundle-product" data-product-id="bundle-2">
                <div class="bundle-product-gray-box">
                  <div class="bundle-product-image">
                    <img src="https://symplofficial.com/cdn/shop/files/Commuter-Carb-20L_preorder_2200x2800_crop_center.jpg?v=1754951777" alt="Laptop Sleeve">
                  </div>
                </div>
                <h4 class="bundle-product-title">Laptop Sleeve</h4>
                <div class="bundle-product-material">Neoprene</div>
                <div class="bundle-product-variants">
                  <div class="variant-dot selected" data-variant-id="var-3">
                    <div class="dot"></div>
                  </div>
                  <div class="variant-dot" data-variant-id="var-4">
                    <div class="dot"></div>
                  </div>
                </div>
                <p class="bundle-product-price">$39.00</p>
                <button class="add-to-bag-btn">Add to Bag</button>
              </div>

              <div class="bundle-product" data-product-id="bundle-3">
                <div class="bundle-product-gray-box">
                  <div class="bundle-product-image">
                    <img src="https://symplofficial.com/cdn/shop/files/Commuter-Carb-20L_preorder_2200x2800_crop_center.jpg?v=1754951777" alt="Travel Duffel">
                  </div>
                </div>
                <h4 class="bundle-product-title">Travel Duffel</h4>
                <div class="bundle-product-material">Waterproof</div>
                <div class="bundle-product-variants">
                  <div class="variant-dot selected" data-variant-id="var-5">
                    <div class="dot"></div>
                  </div>
                  <div class="variant-dot" data-variant-id="var-6">
                    <div class="dot"></div>
                  </div>
                </div>
                <p class="bundle-product-price">$89.00</p>
                <button class="add-to-bag-btn">Add to Bag</button>
              </div>

              <div class="bundle-product" data-product-id="bundle-4">
                <div class="bundle-product-gray-box">
                  <div class="bundle-product-image">
                    <img src="https://symplofficial.com/cdn/shop/files/Commuter-Carb-20L_preorder_2200x2800_crop_center.jpg?v=1754951777" alt="Vergara Tote">
                  </div>
                </div>
                <h4 class="bundle-product-title">Vergara Tote</h4>
                <div class="bundle-product-material">Ballistic</div>
                <div class="bundle-product-variants">
                  <div class="variant-dot selected" data-variant-id="var-7">
                    <div class="dot"></div>
                  </div>
                  <div class="variant-dot" data-variant-id="var-8">
                    <div class="dot"></div>
                  </div>
                </div>
                <p class="bundle-product-price">$149.00</p>
                <button class="add-to-bag-btn">Add to Bag</button>
              </div>
            </div>
          </div>
        </div>
    </div>

    <!-- Sticky Checkout Section -->
    <div class="checkout-section">
      <div class="discount-code-section">
        <input type="text" id="discount-code" class="discount-input" placeholder="Discount Code" maxlength="20">
        <button id="apply-discount" class="apply-discount-btn">Apply</button>
      </div>
      
      <div class="savings-row" id="savings-display" style="display: none;">
        <span class="savings-label">Savings</span>
        <span class="savings-amount" id="savings-amount">-$8.85</span>
      </div>
      
      <div class="shipping-info">
        <div class="shipping-text">
          <p>Free shipping over $50 and free 30 days return</p>
          
          <!-- Payment Methods -->
          <div class="payment-methods">
            <!-- Visa -->
            <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Visa_Inc._logo.svg/2560px-Visa_Inc._logo.svg.png" alt="Visa" class="payment-icon">
            
            <!-- Mastercard -->
            <img src="https://pngimg.com/d/mastercard_PNG15.png" alt="Mastercard" class="payment-icon">
            
            <!-- PayPal -->
            <img src="https://logos-world.net/wp-content/uploads/2020/07/PayPal-Logo-2007.png" alt="PayPal" class="payment-icon">
            
            <!-- Apple Pay -->
            <img src="https://cdn-icons-png.flaticon.com/512/5968/5968500.png" alt="Apple Pay" class="payment-icon">
            
            <!-- American Express -->
            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSm73LvI1Hjl87YXRhaNgwI8G65OBi8KOtuEw&s" alt="American Express" class="payment-icon">
            
            <!-- Shop Pay -->
            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTp-2ZhkuBgV0xrrobgbq0QmQ_hFSS4JkLdWI5T5U3FtwRkeWFKz_fTIfs8aNHszviJw1Y&usqp=CAU" alt="Shop Pay" class="payment-icon">
            
            <!-- Google Pay -->
            <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Google_Pay_Logo.svg/800px-Google_Pay_Logo.svg.png" alt="Google Pay" class="payment-icon">
            
            <!-- Venmo -->
            <img src="https://static1.makeuseofimages.com/wordpress/wp-content/uploads/2024/10/venmo-logo-blue.jpg" alt="Venmo" class="payment-icon">
          </div>
        </div>
        
        <div class="shipping-totals">
          <div class="shipping-row">
            <span class="shipping-label">Shipping</span>
            <span class="shipping-cost">
                $5.00
            </span>
          </div>
          <div class="total-row">
            <span class="total-label">Total</span>
            <span class="total-amount">$223.00</span>
          </div>
        </div>
      </div>
      
      <button class="checkout-btn" id="checkout-btn">
        Checkout
      </button>
    </div>
  </div>
</div>

<style>
.custom-cart-container {
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  height: 100vh;
  z-index: 10000;
  display: block;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform: translateX(100%);
}

.custom-cart-container.open {
  transform: translateX(0);
}

.custom-cart-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
}

.custom-cart-content {
  position: absolute;
  top: 0;
  right: 0;
  width: 580px;
  height: 100vh;
  background: #ffffff;
  box-shadow: -4px 0 24px rgba(0, 0, 0, 0.15);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  border-radius: 0;
}

/* Free Shipping Progress Bar */
.free-shipping-progress {
  background: #ffffff;
  color: #111827;
  text-align: center;
  padding: 16px 16px 20px;
  position: relative;
}

.free-shipping-progress .progress-text {
  color: #111827;
  margin-bottom: 16px;
}

.free-shipping-progress .free-shipping-achieved {
  color: #111827;
  font-weight: 600;
  font-size: 16px;
}

.free-shipping-progress .free-shipping-progress-text {
  color: #111827;
  font-size: 14px;
}

.free-shipping-progress .remaining-amount {
  color: #111827;
  font-weight: 600;
}

.progress-bar-container {
  width: 100%;
  height: 12px;
  background: #e5e7eb;
  border-radius: 6px;
  overflow: visible;
  margin-bottom: 0;
  position: relative;
}

.progress-bar {
  height: 100%;
  background: #5896a1;
  border-radius: 6px;
  transition: width 0.6s ease;
  position: relative;
}

.truck-icon {
  position: absolute;
  right: -6px;
  top: -6px;
  background: #5896a1;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.truck-icon svg {
  width: 16px;
  height: 16px;
  fill: white;
}

/* Cart Header */
.cart-header {
  padding: 16px;
  position: relative;
}

.cart-title {
  font-size: 18px;
  font-weight: 600;
  color: #111827;
  margin: 0;
  font-family: inherit;
}

.cart-close {
  position: absolute;
  top: 16px;
  right: 16px;
  background: none;
  border: none;
  color: #6b7280;
  cursor: pointer;
  padding: 8px;
  border-radius: 50%;
  transition: all 0.2s ease;
  font-size: 18px;
}

.cart-close:hover {
  background: #f5f5f5;
  color: #333;
}

/* Cart Items Container */
.cart-items-container {
  flex: 1;
  overflow-y: auto;
  padding: 0 16px;
  background: #ffffff;
}

.cart-items-list {
  padding: 16px 0 0 0;
}

.cart-item {
  display: flex;
  align-items: center;
  padding: 24px 0;
  gap: 16px;
}

.cart-item-image {
  flex-shrink: 0;
  width: 64px;
  height: 64px;
  border-radius: 8px;
  overflow: hidden;
  background: #f8f9fa;
}

.cart-item-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.cart-item-details {
  flex: 1;
  min-width: 0;
}

.cart-item-title {
  font-size: 16px;
  font-weight: 500;
  color: #111827;
  margin: 0 0 4px 0;
  line-height: 1.3;
  font-family: inherit;
}

.cart-item-variant {
  font-size: 14px;
  color: #6b7280;
  margin: 0;
  font-weight: 500;
}

.cart-item-actions {
  display: flex;
  align-items: center;
  gap: 12px;
}

.cart-item-quantity {
  display: flex;
  align-items: center;
  gap: 8px;
  background: transparent;
}

.quantity-btn {
  width: 32px;
  height: 32px;
  border: 1px solid #d1d5db;
  border-radius: 50%;
  background: #ffffff;
  color: #6b7280;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.quantity-btn:hover {
  background: #f8f9fa;
  color: #111827;
  border-color: #9ca3af;
}

.quantity-btn svg {
  width: 16px;
  height: 16px;
}

.quantity-display {
  font-size: 14px;
  font-weight: 500;
  color: #374151;
  min-width: 24px;
  text-align: center;
  padding: 0;
}

.cart-item-pricing {
  text-align: right;
  min-width: 80px;
}

.price-container {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.regular-price {
  font-size: 16px;
  font-weight: 500;
  color: #111827;
}

.original-price {
  font-size: 14px;
  color: #9ca3af;
  text-decoration: line-through;
}

.sale-price {
  font-size: 16px;
  font-weight: 500;
  color: #059669;
}

.savings {
  font-size: 12px;
  color: #059669;
  font-weight: 500;
}

.bundle-tag {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 11px;
  color: #059669;
  font-weight: 600;
  margin-top: 2px;
}

.bundle-dot {
  width: 8px;
  height: 8px;
  background: #059669;
  border-radius: 50%;
}

.cart-item-remove {
  background: none;
  border: none;
  color: #9ca3af;
  cursor: pointer;
  padding: 8px;
  border-radius: 50%;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cart-item-remove:hover {
  background: #f8f9fa;
  color: #dc2626;
}

.cart-item-remove svg {
  width: 20px;
  height: 20px;
}

/* Bundle & Save Section */
.bundle-save-section {
  padding: 24px 0px;
  background: #ffffff;
  margin: 0 0px;
}

.bundle-title {
  font-size: 18px;
  font-weight: 600 !important;
  color: #111827;
  margin: 0 0 16px 0;
  font-family: inherit;
  padding-left: 0;
}

.bundle-products-container {
  overflow: hidden;
  position: relative;
  cursor: grab;
  padding: 0 0px;
}

.bundle-products-container.grabbing {
  cursor: grabbing;
}

.bundle-products-scroll {
  display: flex;
  gap: 9px;
  padding: 8px 0;
  margin-left: 0;
  transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1); 
  will-change: transform;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.bundle-products-scroll.no-transition {
  transition: none;
}

.bundle-product {
  flex: 0 0 152px;
  background: transparent;
  border-radius: 0;
  padding: 0;
  text-align: center;
  border: none;
  transition: all 0.2s ease;
  box-shadow: none;
  margin: 0;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.bundle-product-image {
  width: 100%;
  height: 120px;
  border-radius: 0;
  overflow: hidden;
  background: transparent;
  margin-bottom: 0;
}

.bundle-product-image img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.bundle-product-title {
  font-size: 14px;
  font-weight: 500;
  color: #111827;
  margin: 0;
  line-height: 1.3;
  font-family: inherit;
  padding: 19px 8px 4px 8px;
}

.bundle-product-price {
  font-size: 14px;
  color: #111827;
  font-weight: 500;
  margin: 0;
  padding: 0 8px 8px 8px;
}

.bundle-product-gray-box {
  background: #f3f4f6;
  border-radius: 8px;
  margin-bottom: 8px;
  overflow: hidden;
  padding-top: 18px;
  padding-bottom: 9px;
}

.bundle-product-variants {
  display: flex;
  justify-content: center;
  gap: 4px;
  margin-bottom: 4px;
}

.variant-dot {
  cursor: pointer;
  transition: all 0.2s ease;
}

.variant-dot .dot {
  width: 12px;
  height: 12px;
  border: 2px solid #d1d5db;
  border-radius: 50%;
  background: #ffffff;
  transition: all 0.2s ease;
}

.variant-dot.selected .dot {
  border-color: #111827;
  background: #111827;
}

.bundle-product-material {
  font-size: 12px;
  color: #D97706;
  font-weight: 500;
  margin: 0 0 8px 0;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.add-to-bag-btn {
  width: 100%;
  background: #037e85;
  color: #ffffff;
  border: none;
  padding: 8px 16px;
  border-radius: 9999px;
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  font-family: inherit;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Checkout Section */
.checkout-section {
  background: #ffffff;
  padding: 20px 16px 24px;
  position: sticky;
  bottom: 0;
  z-index: 10;
}

.discount-code-section {
  display: flex;
  gap: 12px;
  margin-bottom: 12px;
}

.discount-input {
  flex: 1;
  padding: 8px 16px;
  width: 371px;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  font-size: 14px;
  font-family: inherit;
}

.discount-input:focus {
  outline: none;
  border-color: #2dd4bf;
  box-shadow: 0 0 0 3px rgba(45, 212, 191, 0.1);
}

.apply-discount-btn {
  background: black;
  color: #ffffff;
  border: none;
  padding: 8px 9px;
  border-radius: 9999px;
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  font-family: inherit;
  white-space: nowrap;
  width: 35%;
}

.apply-discount-btn:hover {
  background: #374151;
}

.savings-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
}

.savings-label {
  font-size: 14px;
  color: #111827;
}

.savings-amount {
  font-size: 14px;
  font-weight: 500;
  color: #111827;
}

.shipping-info {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 24px;
}

.shipping-text {
  flex: 1;
}

.shipping-text p {
  font-size: 14px;
  color: #111827;
  margin: 0 0 12px 0;
}

.payment-methods {
  display: flex;
  gap: 4px;
  flex-wrap: wrap;
}

.payment-icon {
  height: 24px;
  width: auto;
  max-width: 48px;
  opacity: 0.8;
  transition: all 0.2s ease;
  filter: grayscale(20%);
  border-radius: 4px;
  object-fit: contain;
}

.payment-icon:hover {
  opacity: 1;
  filter: grayscale(0%);
  transform: scale(1.05);
}

.shipping-totals {
  text-align: right;
  margin-left: 16px;
  min-width: 189px;
}

.shipping-row, .total-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
}

.shipping-row:last-child {
  margin-bottom: 0;
}

.shipping-label, .total-label {
  font-size: 14px;
  color: #111827;
}

.shipping-cost {
  font-size: 14px;
  font-weight: 500;
  color: #111827;
}

.total-label {
  font-weight: 500;
}

.total-amount {
  font-size: 14px;
  font-weight: 600;
  color: #111827;
}

.checkout-btn {
  width: 100%;
  background: black;
  color: #ffffff;
  border: none;
  padding: 9px 24px;
  border-radius: 9999px;
  font-size: 18px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  font-family: inherit;
}

.checkout-btn:hover:not(:disabled) {
  background: #374151;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(17, 24, 39, 0.3);
}

.checkout-btn:disabled {
  background: #9ca3af;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/* Responsive Design */
@media (max-width: 768px) {
  .custom-cart-content {
    max-width: 100%;
  }
  
  .free-shipping-progress {
    padding: 12px 16px 16px;
  }
  
  .cart-header {
    padding: 16px;
  }
  
  .cart-items-container {
    padding: 0 16px;
  }
  
  .cart-item {
    padding: 20px 0;
    gap: 12px;
  }
  
  .bundle-save-section {
    padding: 20px 16px;
  }
  
  .checkout-section {
    padding: 20px 16px 24px;
  }
}

@media (max-width: 480px) {
  .free-shipping-progress {
    padding: 12px 16px 16px;
  }
  
  .cart-header {
    padding: 16px;
  }
  
  .cart-title {
    font-size: 18px;
  }
  
  .cart-items-container {
    padding: 0 16px;
  }
  
  .cart-item {
    padding: 16px 0;
    gap: 10px;
  }
  
  .bundle-save-section {
    padding: 16px;
  }
  
  .checkout-section {
    padding: 16px;
  }
  
  .discount-code-section {
    flex-direction: column;
    gap: 8px;
  }
  
  .apply-discount-btn {
    width: 100%;
  }
  
  .shipping-info {
    flex-direction: column;
    gap: 16px;
  }
  
  .shipping-totals {
    margin-left: 0;
    text-align: left;
  }
}
</style>

<script>
// Bundle slide navigation functionality only
class BundleSlideNavigation {
  constructor() {
    this.init();
  }

  setupBundleDragAndTouch() {
    const bundleContainer = document.getElementById('bundle-products-scroll');
    if (!bundleContainer) {
      console.log('Bundle container not found');
      return;
    }

    console.log('Setting up bundle drag and touch');

    let currentIndex = 0;
    let cardWidth;
    let totalCards;
    let visibleCards;
    let isDragging = false;
    let startPos = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;
    let animationID = 0;
    let clickPrevented = false;
    let lastDeltaX = 0;
    let hasDragged = false;
    let dragStartTime = 0;
    let dragThreshold = 10;

    // Calculate dimensions
    function calculateDimensions() {
      const bundleProducts = bundleContainer.querySelectorAll('.bundle-product');
      console.log('Bundle products found:', bundleProducts.length);
      if (bundleProducts.length === 0) return;
      
      totalCards = bundleProducts.length;
      const firstCard = bundleProducts[0];
      const style = window.getComputedStyle(firstCard);
      const marginLeft = parseInt(style.marginLeft) || 0;
      const marginRight = parseInt(style.marginRight) || 0;
      
      cardWidth = firstCard.offsetWidth + marginLeft + marginRight;
      console.log('Card width:', cardWidth, 'Total cards:', totalCards);
      
      const containerWidth = bundleContainer.parentElement.offsetWidth;
      visibleCards = Math.floor(containerWidth / cardWidth);
      visibleCards = Math.max(1, visibleCards);
      console.log('Container width:', containerWidth, 'Visible cards:', visibleCards);
    }

    // Initialize
    calculateDimensions();
    updateBundlePosition();

    // Handle window resize
    window.addEventListener('resize', function() {
      calculateDimensions();
      if (currentIndex > totalCards - visibleCards) {
        currentIndex = Math.max(0, totalCards - visibleCards);
      }
      updateBundlePosition();
    });

    // Update bundle position
    function updateBundlePosition() {
      if (isNaN(cardWidth) || cardWidth <= 0) {
        calculateDimensions();
        if (isNaN(cardWidth) || cardWidth <= 0) return;
      }
      const translateX = -currentIndex * cardWidth;
      console.log('Updating position:', translateX, 'Current index:', currentIndex);
      bundleContainer.style.transform = `translateX(${translateX}px)`;
    }

    // Check if target is interactive
    function isInteractiveTarget(target) {
      return target.closest('.variant-dot') || 
             target.closest('.add-to-bag-btn') || 
             target.closest('button') ||
             target.closest('input') ||
             target.closest('select');
    }

    // Prevent link clicks during drag
    bundleContainer.addEventListener('click', function(e) {
      if (hasDragged) {
        e.preventDefault();
        e.stopPropagation();
        hasDragged = false;
      }
    });

    // Mouse drag support
    let mouseStartTime = 0;
    let mouseStartX = 0;
    let mouseLastX = 0;
    let mouseLastTime = 0;

    bundleContainer.addEventListener('mousedown', function(e) {
      if (isInteractiveTarget(e.target)) {
        console.log('Mouse down on interactive element, not starting drag');
        return;
      }

      console.log('Mouse down on bundle container');
      if (e.button !== 0) return;
      e.preventDefault();
      isDragging = true;
      clickPrevented = false;
      hasDragged = false;
      dragStartTime = Date.now();
      mouseStartX = startPos = e.clientX;
      mouseLastX = e.clientX;
      mouseStartTime = mouseLastTime = Date.now();
      prevTranslate = -currentIndex * cardWidth;
      bundleContainer.classList.add('no-transition');
      bundleContainer.parentElement.classList.add('grabbing');
      cancelAnimationFrame(animationID);
      animationID = requestAnimationFrame(animation);
    });

    window.addEventListener('mousemove', function(e) {
      if (!isDragging) return;
      const currentPosition = e.clientX;
      const diff = currentPosition - mouseStartX;
      lastDeltaX = diff;
      currentTranslate = prevTranslate + diff;
      mouseLastX = currentPosition;
      mouseLastTime = Date.now();
      
      const maxTranslate = 0;
      const minTranslate = -(totalCards - visibleCards) * cardWidth;
      if (currentTranslate > maxTranslate) {
        currentTranslate = maxTranslate + diff * 0.3;
      } else if (currentTranslate < minTranslate) {
        currentTranslate = minTranslate + diff * 0.3;
      }
      
      if (Math.abs(diff) > dragThreshold) {
        clickPrevented = true;
        hasDragged = true;
      }
    });

    function mouseDragEnd(e) {
      if (!isDragging) return;
      
      const dragDuration = Date.now() - dragStartTime;
      const movedBy = mouseLastX - mouseStartX;
      
      if (dragDuration < 200 && Math.abs(movedBy) < dragThreshold) {
        console.log('Short interaction, not a drag');
        isDragging = false;
        bundleContainer.classList.remove('no-transition');
        bundleContainer.parentElement.classList.remove('grabbing');
        cancelAnimationFrame(animationID);
        return;
      }
      
      console.log('Mouse drag end');
      isDragging = false;
      bundleContainer.classList.remove('no-transition');
      bundleContainer.parentElement.classList.remove('grabbing');
      
      const timeElapsed = (mouseLastTime - mouseStartTime) || 1;
      const velocity = movedBy / timeElapsed;
      let targetIndex = currentIndex;
      
      const flickVelocity = 0.5;
      if (cardWidth > 0) {
        if (Math.abs(velocity) > flickVelocity) {
          if (velocity < 0) {
            targetIndex = Math.min(totalCards - visibleCards, currentIndex + 2);
          } else {
            targetIndex = Math.max(0, currentIndex - 2);
          }
        } else if (Math.abs(movedBy) > cardWidth * 0.15) {
          if (movedBy < 0) {
            targetIndex = Math.min(totalCards - visibleCards, currentIndex + 2);
          } else {
            targetIndex = Math.max(0, currentIndex - 2);
          }
        } else {
          targetIndex = currentIndex;
        }
      }
      
      targetIndex = Math.max(0, Math.min(totalCards - visibleCards, targetIndex));
      currentIndex = targetIndex;
      updateBundlePosition();
      
      cancelAnimationFrame(animationID);
      setTimeout(() => {
        clickPrevented = false;
      }, 550);
    }

    window.addEventListener('mouseup', mouseDragEnd);
    bundleContainer.addEventListener('mouseleave', mouseDragEnd);

    // Touch swipe support for mobile
    let touchStartX = 0;
    let touchStartY = 0;
    let touchCurrentX = 0;
    let touchStartTime = 0;
    let touchPrevTranslate = 0;
    let touchIsDragging = false;
    let touchHasDragged = false;
    let touchDirection = null;

    bundleContainer.addEventListener('touchstart', function(e) {
      if (isInteractiveTarget(e.target)) {
        console.log('Touch start on interactive element, not starting drag');
        return;
      }

      console.log('Touch start on bundle container');
      if (e.touches.length !== 1) return;
      touchIsDragging = true;
      touchHasDragged = false;
      touchDirection = null;
      dragStartTime = Date.now();
      touchStartX = e.touches[0].clientX;
      touchStartY = e.touches[0].clientY;
      touchCurrentX = e.touches[0].clientX;
      touchStartTime = Date.now();
      touchPrevTranslate = -currentIndex * cardWidth;
      bundleContainer.classList.add('no-transition');
      bundleContainer.parentElement.classList.add('grabbing');
    }, { passive: true });

    bundleContainer.addEventListener('touchmove', function(e) {
      if (!touchIsDragging || e.touches.length !== 1) return;

      const currentX = e.touches[0].clientX;
      const currentY = e.touches[0].clientY;

      if (touchDirection === null) {
        const deltaX = Math.abs(currentX - touchStartX);
        const deltaY = Math.abs(currentY - touchStartY);

        if (deltaX > 5 || deltaY > 5) {
          if (deltaX > deltaY) {
            touchDirection = 'horizontal';
          } else {
            touchDirection = 'vertical';
          }
        }
      }

      if (touchDirection === 'horizontal') {
        e.preventDefault();
        touchCurrentX = currentX;
        const diff = touchCurrentX - touchStartX;
        currentTranslate = touchPrevTranslate + diff;
        
        const maxTranslate = 0;
        const minTranslate = -(totalCards - visibleCards) * cardWidth;
        if (currentTranslate > maxTranslate) {
          currentTranslate = maxTranslate + diff * 0.3;
        } else if (currentTranslate < minTranslate) {
          currentTranslate = minTranslate + diff * 0.3;
        }
        
        bundleContainer.style.transform = `translateX(${currentTranslate}px)`;
        
        if (Math.abs(diff) > dragThreshold) {
          touchHasDragged = true;
          hasDragged = true;
        }
      }
    }, { passive: false });

    bundleContainer.addEventListener('touchend', function(e) {
      if (!touchIsDragging) return;

      const wasHorizontal = touchDirection === 'horizontal';
      
      touchIsDragging = false;
      touchDirection = null;

      if (!wasHorizontal) {
        return;
      }
      
      const dragDuration = Date.now() - dragStartTime;
      const movedBy = touchCurrentX - touchStartX;
      
      if (dragDuration < 200 && Math.abs(movedBy) < dragThreshold) {
        console.log('Short touch interaction, not a drag');
        bundleContainer.classList.remove('no-transition');
        bundleContainer.parentElement.classList.remove('grabbing');
        return;
      }
      
      console.log('Touch end on bundle container');
      bundleContainer.classList.remove('no-transition');
      bundleContainer.parentElement.classList.remove('grabbing');
      
      const timeElapsed = (Date.now() - touchStartTime) || 1;
      const velocity = movedBy / timeElapsed;
      let targetIndex = currentIndex;
      const flickVelocity = 0.5;
      
      if (cardWidth > 0) {
        if (Math.abs(velocity) > flickVelocity) {
          if (velocity < 0) {
            targetIndex = Math.min(totalCards - visibleCards, currentIndex + 2);
          } else {
            targetIndex = Math.max(0, currentIndex - 2);
          }
        } else if (Math.abs(movedBy) > cardWidth * 0.15) {
          if (movedBy < 0) {
            targetIndex = Math.min(totalCards - visibleCards, currentIndex + 2);
          } else {
            targetIndex = Math.max(0, currentIndex - 2);
          }
        }
      }
      
      targetIndex = Math.max(0, Math.min(totalCards - visibleCards, targetIndex));
      currentIndex = targetIndex;
      updateBundlePosition();
      
      setTimeout(() => {
        hasDragged = false;
      }, 550);
    });

    // Animation function
    function animation() {
      if (isDragging) {
        bundleContainer.style.transform = `translateX(${currentTranslate}px)`;
        animationID = requestAnimationFrame(animation);
      }
    }
  }
}

// Initialize bundle navigation when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
  setTimeout(() => {
    new BundleSlideNavigation();
  }, 100);
});

window.BundleSlideNavigation = BundleSlideNavigation;
</script>